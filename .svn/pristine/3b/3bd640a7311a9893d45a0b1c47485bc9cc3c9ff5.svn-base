var crypto = require('crypto');   // for generating session id
var url	 = "mongodb://localhost:27017/";
const {ObjectId} = require('mongodb').ObjectId;
var database = "BrevoV3"
var MongoClient=require('mongodb').MongoClient;



function createSession(id)
{
	
	MongoClient.connect(url,{useNewUrlParser: true},function(err,db)
	{
		if(err)
		{
			db.close();
			return "Error"
		}
		else
		{	
			var dbo=db.db(database);
			var session_key = crypto.randomBytes(16).toString('base64');
			dbo.collection("Session").insertOne({"sessionKey":session_key,"userId":id,"expireAt":new Date()}, function(err,res)
			{
				if(err)
				{
					return "Error"
					db.close();
				}
				else
				{
					dbo.collection("Session").createIndex({"expireAt":1},{"expireAfterSeconds":200})
					return session_key
				}
			});
		}
	});
}

function test(){
	return "Success"
}

function validateSession(sessionKey, userId)
{
	MongoClient.connect(url,{useNewUrlParser: true},function(err,db)
	{
		if(err)
		{
			db.close();
			return "Error"
		}
		else
		{
			var dbo=db.db(database);
   			dbo.collection("Session").findOne({sessionKey:sessionKey,userId:userId},function(err,res1)
			{
				if(err)
				{
					db.close();
					return false;
				}
				else
				{
					if(res1==null)
					{
						db.close();
						return false;
					}
					else
					{
						db.close();			
						return true;
					}
				}
			});
		}
	});
}	


function deleteSession(sessionKey)
{
	MongoClient.connect(url,{useNewUrlParser: true},function(err,db)
	{
		if(err)
		{
			db.close();
			return "Error"
		}
		else
		{
			var dbo=db.db(database);
			dbo.collection("Session").deleteOne({sessionKey:sessionKey},function(err,res1)
			{
				if(err)
				{
					db.close();
					return false
				}	
				else
				{
					db.close();
					return true
				}
			});
				
		}
	});
}


module.exports = {
    createSession,
    validateSession,
	deleteSession,
}